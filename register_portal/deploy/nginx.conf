# ==========================================
# Environmental Stewardship Portal
# Nginx Configuration
# ==========================================
# 
# This configuration serves the registration portal with proper
# caching, security headers, and proxy settings.
# 
# Attribution: This project uses the services of Claude and Anthropic PBC.
# ==========================================

server {
    listen 80;
    listen [::]:80;
    
    # Replace with your actual domain
    server_name your-domain.com www.your-domain.com;
    
    # Root directory
    root /var/www/registration-portal;
    index index.html;
    
    # Logging
    access_log /var/log/nginx/registration-portal-access.log;
    error_log /var/log/nginx/registration-portal-error.log;
    
    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    
    # CORS headers (adjust as needed)
    add_header Access-Control-Allow-Origin "*" always;
    add_header Access-Control-Allow-Methods "GET, POST, OPTIONS" always;
    add_header Access-Control-Allow-Headers "Content-Type, Authorization" always;
    
    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types text/plain text/css text/xml text/javascript application/json application/javascript application/xml+rss application/rss+xml font/truetype font/opentype application/vnd.ms-fontobject image/svg+xml;
    
    # Main location
    location / {
        try_files $uri $uri/ /index.html;
        
        # Cache static assets
        location ~* \.(css|js|jpg|jpeg|png|gif|ico|svg|woff|woff2|ttf|eot)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
        }
    }
    
    # API proxy (if API is on same server)
    # Uncomment and adjust if needed
    # location /api/ {
    #     proxy_pass http://localhost:8000/api/;
    #     proxy_http_version 1.1;
    #     proxy_set_header Upgrade $http_upgrade;
    #     proxy_set_header Connection 'upgrade';
    #     proxy_set_header Host $host;
    #     proxy_cache_bypass $http_upgrade;
    #     proxy_set_header X-Real-IP $remote_addr;
    #     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    #     proxy_set_header X-Forwarded-Proto $scheme;
    # }
    
    # Deny access to hidden files
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    # Block access to sensitive files
    location ~* \.(conf|log|bak|sql|sh)$ {
        deny all;
    }
}

# SSL configuration (uncomment after setting up Let's Encrypt)
# server {
#     listen 443 ssl http2;
#     listen [::]:443 ssl http2;
#     
#     server_name your-domain.com www.your-domain.com;
#     
#     # SSL certificates (Let's Encrypt)
#     ssl_certificate /etc/letsencrypt/live/your-domain.com/fullchain.pem;
#     ssl_certificate_key /etc/letsencrypt/live/your-domain.com/privkey.pem;
#     
#     # SSL configuration
#     ssl_protocols TLSv1.2 TLSv1.3;
#     ssl_ciphers HIGH:!aNULL:!MD5;
#     ssl_prefer_server_ciphers on;
#     ssl_session_cache shared:SSL:10m;
#     ssl_session_timeout 10m;
#     
#     # HSTS (uncomment after testing)
#     # add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
#     
#     # Include all location blocks from above
#     root /var/www/registration-portal;
#     index index.html;
#     
#     # ... (copy all location blocks from HTTP config)
# }

# Redirect HTTP to HTTPS (uncomment after SSL setup)
# server {
#     listen 80;
#     listen [::]:80;
#     server_name your-domain.com www.your-domain.com;
#     return 301 https://$server_name$request_uri;
# }
